@{
    ViewData["Title"] = "Карта";
}

<!DOCTYPE html>
<html lang='en'>

<head>

    <meta charset='utf-8' />
    <title>Route finder</title>
    <meta name='viewport' content='width=device-width, initial-scale=1' />
    <!-- Import Mapbox GL JS -->
    <script src="https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.js"></script>
    <link href="https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css" rel="stylesheet" />
    <!-- Import Turf and Polyline -->
    <!--<script src="https://npmcdn.com/turf/turf/turf.min.js"></script>-->
    <script src=https://cdnjs.cloudflare.com/ajax/libs/mapbox-polyline/1.1.1/polyline.js></script>
    <!-- Import Mapbox GL Directions -->
    <script src=https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.0.2/mapbox-gl-directions.js></script>
    <link rel="stylesheet" href=https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.0.2/mapbox-gl-directions.css type="text/css" />


    <style>


        #map {
            position: absolute;
            top: 7%;
            bottom: 60px;
            left: 3%;
            right: 3%;
        }

    </style>
</head>
<body>

    <div id="map"></div>
    
</body>
</html>

<script>
    mapboxgl.accessToken = "pk.eyJ1IjoiZXJyb3J5IiwiYSI6ImNrbzNhc2N5aTBxbGsyd3M1OW04anJqcWgifQ.vPPVJo4JceJLt64WE6Ki6w";

    var map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/streets-v11',
        center: [30.30, 50.30],
        zoom: 8
    });

    var directions = new MapboxDirections({
        accessToken: mapboxgl.accessToken,
        unit: "metric",
        profile: "mapbox/driving",
        alternatives: true,
        geometries: "geojson",
        controls: { instructions: false },
        flyTo: false
    });

    map.addControl(directions, "top-left");
    map.addControl(new mapboxgl.NavigationControl());
    map.scrollZoom.enable();
</script>





@*<!DOCTYPE html>
    <html>
    <head>
        <meta charset="utf-8" />
        <title>Display a popup on click</title>
        <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no" />
        <script src="https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.js"></script>
        <link href="https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css" rel="stylesheet" />
        <style>
            #map {
                position: absolute;
                top: 90px;
                bottom: 60px;
                left: 3%;
                right: 3%;
                z-index: 1;
            }
        </style>
    </head>
    <body>
        <style>
            .mapboxgl-popup {
                max-width: 400px;
                font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;
            }
        </style>
        <div id="map"></div>
        <script>
            mapboxgl.accessToken = 'pk.eyJ1IjoiZXJyb3J5IiwiYSI6ImNrbzNhc2N5aTBxbGsyd3M1OW04anJqcWgifQ.vPPVJo4JceJLt64WE6Ki6w';
            var map = new mapboxgl.Map({
                container: 'map',
                style: 'mapbox://styles/mapbox/light-v10',
                center: [-20, 35],
                zoom: 2
            });
            map.on('load', function () {
                map.addSource('places', {
                    'type': 'geojson',
                    'data': {
                        'type': 'FeatureCollection',
                        'features': [
                            {
                                'type': 'Feature',
                                'properties': {
                                        'icon': 'marker'
                                },
                                'geometry': {
                                    'type': 'Point',
                                    'coordinates': [31.18, 51.30]
                                }
                            }
                        ]
                    }
                });
                // Add a layer showing the places.
                map.addLayer({
                    'id': 'places',
                    'type': 'symbol',
                    'source': 'places',
                    'layout': {
                        'icon-image': '{icon}-15',
                        'icon-allow-overlap': true,
                        'icon-size': 2.75
                    }
                });
                // When a click event occurs on a feature in the places layer, open a popup at the
                // location of the feature, with description HTML from its properties.
                map.on('click', 'places', function (e) {
                    var coordinates = e.features[0].geometry.coordinates.slice();
                    var description = e.features[0].properties.description;
                    map.flyTo({
                        center: e.features[0].geometry.coordinates
                    });
                    // Ensure that if the map is zoomed out such that multiple
                    // copies of the feature are visible, the popup appears
                    // over the copy being pointed to.
                    while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
                        coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
                    }
                    new mapboxgl.Popup()
                        .setLngLat(coordinates)
                        .setHTML(description)
                        .addTo(map);
                });
                // Change the cursor to a pointer when the mouse is over the places layer.
                map.on('mouseenter', 'places', function () {
                    map.getCanvas().style.cursor = 'pointer';
                });
                // Change it back to a pointer when it leaves.
                map.on('mouseleave', 'places', function () {
                    map.getCanvas().style.cursor = '';
                });
            });
        </script>




    </body>
    </html>*@
